on:
  push:
    tags:
      - "v*"
env:
  PROPERTIES_PATH: "./android/key.properties"

name: "Build & Release"
jobs:
  build-mobile:
    name: Build & Release Android
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Creating the key.properties file
      - run: |
          echo keyPassword=\${{ secrets.KEY_PASSWORD }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.STORE_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}

      # Decoding base64 key into a file
      - run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > android/app/key.jks

      # Get dependencies and make assigned appbundle
      - run: |
          flutter pub get
          flutter build appbundle

      # build apk
      - run: flutter build apk --split-per-abi

      # push to releases
      - name: Push to Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN}}
        with:
          files: |
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk
            build/app/outputs/bundle/release/app-release.aab

  build-windows:
    name: Build & Release Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: dart fix --apply
      - run: flutter pub get
      # build msix
      - name: Build artifacts
        run: dart run msix:create
      # push to releases
      - name: Push to Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN}}
        with:
          files: build/windows/x64/runner/Release/flipnmatch.msix

  build-web:
    name: Build & Release Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: dart fix --apply
      - run: flutter pub get
      - name: Build artifacts
        run: flutter build web
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: "zip"
          filename: flipnmatch-web.zip
          directory: build/web
      - name: Linux Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          files: build/linux/x64/release/bundle/flipnmatch-web.zip

  build-linux:
    name: Build & Release Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: dart fix --apply
      - run: flutter pub get
      - name: Build artifacts
        run: flutter build linux
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: "zip"
          filename: flipnmatch-linux.zip
          directory: build/linux/x64/release/bundle
      - name: Linux Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          files: build/linux/x64/release/bundle/flipnmatch-linux.zip

  build-macos:
    name: Build & Release macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: dart fix --apply
      - run: flutter pub get
      - name: Build artifacts
        run: flutter build macos
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: "zip"
          filename: flipnmatch-macos.zip
          directory: build/macos/Build/Products/Release
      - name: macOS Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN}}
        with:
          files: build/macos/Build/Products/Release/flipnmatch-macos.zip
